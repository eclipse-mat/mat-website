<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<?xml-stylesheet type="text/xsl" href="http://www.eclipse.org/projects/project-plan.xsl"?>
<plan plan-format="1.0" xmlns="http://www.eclipse.org/project/plan"
	xmlns:html="http://www.w3.org/1999/xhtml" name="Eclipse Memory Analyzer">
	<release projectid="technology.mat" version="0.8" />
	<introduction>
		<html:div xmlns="http://www.w3.org/1999/xhtml">
			<p>The Memory Analyzer has a rich set of features to analyze heap dumps
			from various VM vendors. The main focus is now on
			<strong>growing the community</strong> around the tool and maturing from incubation.</p>
			
			<p>During the incubation we managed to create some community around the tool,
			to extend the list of involved committer companies (now SAP and IBM), to become
			part of the Galileo simultaneous release, and to reach a download-rate of around 
			1000 downloads weakly for the standalone RCP version of the Memory Analyzer. 
			With these achievements behind, our next steps will be focused on the maturing 
			of the project.
			</p>
			
			<p>This project plan describes the improvements we target
			for our first mature release 1.0</p>
		</html:div>
	</introduction>
	<release_deliverables>
		<html:div xmlns="http://www.w3.org/1999/xhtml">
			The Memory Analyzer is delivered as
			<ul>
				<li>stand-along RCP version via Eclipse.Org download server.</li>
				<li>feature to be installed into an Eclipse IDE installation using an update site.</li>
			</ul>
		</html:div>
	</release_deliverables>
	<release_milestones>
		<preamble>
			<html:div xmlns="http://www.w3.org/1999/xhtml">
				We plan to build and publish a stable version of the Memory Analyzer on a monthly basis.
			</html:div>
		</preamble>
		<milestone date="4/1/2010" milestone="0.8">
			<html:div>Tentative Release Date 1.0</html:div>
		</milestone>
		<postamble />
	</release_milestones>
	<target_environments>
		<html:div xmlns="http://www.w3.org/1999/xhtml">
			The Memory Analyzer requires Java 5 and runs on Eclipse 3.3 (Europa) and greater.
			A stand-alone version is provided on the download server which is build currently 
			with Eclipse 3.5.1. 
		</html:div>
		<internationalization>
			<html:div>The Memory Analyzer is prepared to be translated. Translation relevant 
			String constants are externalized into resource bundles.</html:div>
		</internationalization>
	</target_environments>
	<compatibility_with_previous_releases>
		<html:div xmlns="http://www.w3.org/1999/xhtml">Binary and source compatibility is expected for the Snapshot and Parser API.</html:div>
	</compatibility_with_previous_releases>
	<themes_and_priorities>
		<preamble />
		<theme name="New Features">
			<description>
				<html:div xmlns="http://www.w3.org/1999/xhtml">
					<p>These are some new features that we would like to finish for the 1.0 release</p>
					<ul>
						<li>
							<em>Interactively Acquire Heap Dumps (<a
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=229449">229449</a>)</em><br />
							This feature adds a wizard to acquire a heap dump from a virtual machine
							running on the local computer. The goal is to ease interactive analysis of an application
							and reduce the time for novices to get started.
						</li>
						<li>
							<em>Expose Callstack Information for Threads (<a
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=268458">268458</a>)</em><br /></em><br />
							Certain heap dump (from 1.6_14 and higher Sun JVM, IBM DTFJ formatted system dumps)
							contain information about the callstacks of threads. Such information could be 
							extremely helpful for the analysis of a series of problems, and therefore it 
							will be exposed from the Memory Analyzer.
						</li>
						<li>
							<em>Report Possible Memory Leaks in WeakHashMaps (<a
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=296826">296826</a>)</em><br />
							A WeakHashMap is expected to get rid of its entries for which the key is only
							weakly referenced. One common problem causing lots of memory leaks is to have
							a (strong) reference chain from the value of the WeakHashMap$Entry to its key. 
							Such a hinder the "weakness" of the map. MAT will provide means to automatically
							detect this anti-pattern.
						</li>
						<li>
							<em>Improved Comparison Functionality</em><br />
							The current comparison features of MAT are very limited - only the class histograms
							of two different heap dumps can be compared.<br />
							It should be possible to compare in MAT two and more arbitrary result tables which 
							have similar columns, for example two histograms, two retained sets, two results 
							from the &quot;groub by value&quot;, etc… These result tables can be from one and the
							same heap dump, or from two or more different heap dumps.
							Having this functionality one can do things like:
							<ul>
								<li>Compare the retained heap of the session for userA and userB (both within the same heap dump) and see why one is bigger than the other</li>
								<li>Analyze how the retained set of userA’s session is changing over time (comparing heap dumps from different tests)</li>  
								<li>Compare several group_by_value results and find which Strings appear in one set and are missing in another one, how the number of occurrence changes, etc…</li>
							</ul> 
							It should be possible to (re)order the results in an arbitrary way.
						</li>
					</ul>
				</html:div>
			</description>
		</theme>
		<theme name="Bug Fixes">
			<description>
				<html:div xmlns="http://www.w3.org/1999/xhtml">
					<p>These are some of the bugs we would like to fix for the 1.0 release</p>
					<ul>
						<li>No JvmInfo in Heap Dump details pane (<a
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=272887">272887</a>)</li>
						<li>Object reference graph incorrect (<a
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=286421">286421</a>)</li>
						<li>Wrong sizes reported for instances with a single byte field (<a
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=231296">231296</a>)</li>
						<li>Pie chart links sometimes wrong (<a
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=286410">286410</a>)</li>
					</ul>
				</html:div>
			</description>
		</theme>
		<theme name="Documentation Improvement">
			<description>
				<html:div xmlns="http://www.w3.org/1999/xhtml">
					<p>The Memory Analyzer documentation is available as (a) help plug-in, (b) WIKI pages
					and (c) blog postings for special topics.</p>
					<ul>
						<li><em>Review the existing documentation</em><br />
							Currently existing documentation should be reviewed and outdated parts have to 
							be adjusted. 
						</li>
						<li>
							<em>Document new features</em><br />
							The newly developed features have to be properly documented.
						</li>
						<li><em>Publish the Help Plug-in contents on the Eclipse.Org Page.</em><br />
							Additionally delivering the help content via web pages will make them searchable
							via search engines like Google. This should attract new users to the tool.
						</li>
					</ul>
				</html:div>
			</description>
		</theme>
		<theme name="Building A Community">
			<description>
				<html:div xmlns="http://www.w3.org/1999/xhtml">
					<p>A vibrant community is essential for the long term health of any project.
					The Memory Analyzer is in a difficult position, because it is a niche tool
					which not only requires some significant domain knowledge about memory analysis
					but also is utilized only sporadically during the development of big applications.
					</p>
					<ul>
						<li>Participate in the Helios Simultaneous Release.</li>
						<li>Be responsive to questions posted to the newsgroup and Bugzilla reports.</li>
						<li>Regularly blog about memory related topics.</li>
					</ul>
				</html:div>
			</description>
		</theme>
	</themes_and_priorities>
</plan>