<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<?xml-stylesheet type="text/xsl" href="http://www.eclipse.org/projects/project-plan.xsl"?>
<plan plan-format="1.0" xmlns="http://www.eclipse.org/project/plan"
	xmlns:html="http://www.w3.org/1999/xhtml" name="Eclipse Memory Analyzer">
	<release projectid="technology.mat" version="1.2.0" />
	<introduction>
		<html:div xmlns="http://www.w3.org/1999/xhtml">
			<p>The Memory Analyzer has a rich set of features to analyze heap dumps
			from various VM vendors. The available toolset is helpful
			to find the root cause of many memory related problems, e.g. OutOfMemoryErrors.
			The team is currently putting the main focus on <strong>growing the community</strong> 
			around the tool and <strong>looking for new problem domains</strong> where the tool
			could be helpful.</p>
			
			<p>This project plan describes the improvements we target
			for version 1.2.0</p>
		</html:div>
	</introduction>
	<release_deliverables>
		<html:div xmlns="http://www.w3.org/1999/xhtml">
			The Memory Analyzer is delivered as
			<ul>
				<li>stand-alone RCP version via eclipse.org download server.</li>
				<li>feature to be installed into an Eclipse IDE installation using an update site.</li>
			</ul>
		</html:div>
	</release_deliverables>
	<release_milestones>
		<preamble>
			<html:div xmlns="http://www.w3.org/1999/xhtml">
				For publishing of milestones we will try to follow the plan of the Juno simultaneous 
				release, potentially skipping some of the milestones.
			</html:div>
		</preamble>
		<milestone date="06/27/2012" milestone="1.2.0">
			<html:div>MAT 1.2.0 should be released and included in the Juno simultaneous release</html:div>
		</milestone>
		<milestone date="09/28/2012" milestone="1.2.1">
			<html:div>MAT 1.2.1 should be released and included in the Juno SR1</html:div>
		</milestone>
		<postamble />
	</release_milestones>
	<target_environments>
		<html:div xmlns="http://www.w3.org/1999/xhtml">
			The Memory Analyzer requires Java 5 and runs on Eclipse 3.4 and greater.
			A stand-alone version is provided on the download server which is build currently 
			with Eclipse 3.7. 
		</html:div>
		<internationalization>
			<html:div>The Memory Analyzer is prepared to be translated. Translation relevant 
			String constants are externalized into resource bundles.</html:div>
		</internationalization>
	</target_environments>
	<compatibility_with_previous_releases>
		<html:div xmlns="http://www.w3.org/1999/xhtml">Binary and source compatibility is expected for the Snapshot and Parser API.</html:div>
	</compatibility_with_previous_releases>
	<themes_and_priorities>
		<preamble />
		<theme name="New Features">
			<description>
				<html:div xmlns="http://www.w3.org/1999/xhtml">
					<p>These are some new features that we would like to finish for the 1.2.0 release</p>
					<ul>
						<li>
							<em>Ensure that Memory Analyzer works fine with Eclipse 4.2(<a
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=364579">364579</a>)</em><br />
							As the Juno simultaneous release is going to be based on Eclipse 4.2,
							Memory Analyzer has to be working properly when installed as a feature in an Eclipse 4.2 IDE.<br />
							Providing a standalone MAT version based on Eclipse 4.2 will be nice to have,
							but it has lower priority. 
						</li>
						<li>
							<em>Add support for UseCompressedOops(<a
					href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=346317">346317</a>)</em><br />
							On x64 platforms many of the JVMs offer the possibility to specify that
							object pointers used by the VM for objects are not 64 bit. 
							HPROF dumps do not contain information if the flag is set or not, therefore 
							object sizes calculated by MAT are incorrect for such heap dumps.
							We can attempt to find or guess this information on our own, using object addresses
							calculation for example.
						</li>
					</ul>
				</html:div>
			</description>
		</theme>
		<theme name="Documentation Improvement">
			<description>
				<html:div xmlns="http://www.w3.org/1999/xhtml">
					<p>The Memory Analyzer documentation is available as (a) help plug-in, (b) WIKI pages
					and (c) blog postings for special topics.</p>
					<ul>
						<li><em>Provide a "developer guide" for extending Memory Analyzer in Wiki</em><br />
							We are working on <a href="http://wiki.eclipse.org/index.php?title=MemoryAnalyzer/Contributor_Reference#Writing_plugins_for_the_Memory_Analyzer">a set of pages</a>
							describing what the different possibilities to extend MAT are,
							and how such extensions could be written.
						</li>
						<li><em>Review the existing documentation</em><br />
							Currently existing documentation should be reviewed and outdated parts have to 
							be adjusted. 
						</li>
						<li>
							<em>Document new features</em><br />
							The newly developed features have to be properly documented.
						</li>
						<li><em>Publish the Help Plug-in contents on the eclipse.org Page.</em><br />
							Additionally delivering the help content via web pages will make them searchable
							via search engines. This should attract new users to the tool.
						</li>
					</ul>
				</html:div>
			</description>
		</theme>
		<theme name="Building A Community">
			<description>
				<html:div xmlns="http://www.w3.org/1999/xhtml">
					<p>A vibrant community is essential for the long term health of any project.
					The Memory Analyzer is in a difficult position, because it is a niche tool
					which not only requires some significant domain knowledge about memory analysis
					but also is utilized only sporadically during the development of big applications.
					</p>
					<ul>
						<li>Participate in the Eclipse Simultaneous Release.</li>
						<li>Be responsive to questions posted to the newsgroup and Bugzilla reports.</li>
					</ul>
				</html:div>
			</description>
		</theme>
	</themes_and_priorities>
</plan>